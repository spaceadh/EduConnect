[{"/home/victoralvin/Pictures/Educonnect/Client/src/index.js":"1","/home/victoralvin/Pictures/Educonnect/Client/src/App.js":"2","/home/victoralvin/Pictures/Educonnect/Client/src/reportWebVitals.js":"3","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Layout/Layout.js":"4","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/AppLayout.js":"5","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/ChatWithLecturers.js":"6","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Register/RegisterPage.js":"7","/home/victoralvin/Pictures/Educonnect/Client/src/Components/ForgotPassword/ForgotPasswordPage.js":"8","/home/victoralvin/Pictures/Educonnect/Client/src/Components/NotFound/NotFound.js":"9","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Login/Login.js":"10","/home/victoralvin/Pictures/Educonnect/Client/src/Components/SuccessPage/SuccessPage.js":"11","/home/victoralvin/Pictures/Educonnect/Client/src/Components/OTP/OTPVerification.js":"12","/home/victoralvin/Pictures/Educonnect/Client/src/UserContext.js":"13","/home/victoralvin/Pictures/Educonnect/Client/src/firebase.js":"14","/home/victoralvin/Pictures/Educonnect/Client/src/apis/auth.js":"15","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/dashboard.js":"16","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/groupChats.js":"17","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/ChatBot.js":"18","/home/victoralvin/Pictures/Educonnect/Client/src/Components/apis/triggeranswers.js":"19","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/UploadDocument.js":"20","/home/victoralvin/Pictures/Educonnect/Lecturer/src/index.js":"21","/home/victoralvin/Pictures/Educonnect/Lecturer/src/UserContext.js":"22","/home/victoralvin/Pictures/Educonnect/Lecturer/src/reportWebVitals.js":"23","/home/victoralvin/Pictures/Educonnect/Lecturer/src/App.js":"24","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Layout/Layout.js":"25","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/AppLayout.js":"26","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/NotFound/NotFound.js":"27","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Login/Login.js":"28","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/OTP/OTPVerification.js":"29","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Register/RegisterPage.js":"30","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/ForgotPassword/ForgotPasswordPage.js":"31","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/SuccessPage/SuccessPage.js":"32","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/groupChats.js":"33","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/ChatWithLecturers.js":"34","/home/victoralvin/Pictures/Educonnect/Lecturer/src/firebase.js":"35","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/dashboard.js":"36","/home/victoralvin/Pictures/Educonnect/Lecturer/src/apis/auth.js":"37","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/ChatBot.js":"38","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/apis/triggeranswers.js":"39","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/StudentList.js":"40","/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/DocumentViewer.js":"41"},{"size":639,"mtime":1711436688294,"results":"42","hashOfConfig":"43"},{"size":2324,"mtime":1711436699086,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1706865684000,"results":"45","hashOfConfig":"43"},{"size":665,"mtime":1706865684000,"results":"46","hashOfConfig":"43"},{"size":278,"mtime":1711433313692,"results":"47","hashOfConfig":"43"},{"size":3786,"mtime":1711528489490,"results":"48","hashOfConfig":"43"},{"size":5028,"mtime":1711434833461,"results":"49","hashOfConfig":"43"},{"size":1989,"mtime":1711415172130,"results":"50","hashOfConfig":"43"},{"size":549,"mtime":1706865684000,"results":"51","hashOfConfig":"43"},{"size":3276,"mtime":1711528075692,"results":"52","hashOfConfig":"43"},{"size":847,"mtime":1706865684000,"results":"53","hashOfConfig":"43"},{"size":3386,"mtime":1706865684000,"results":"54","hashOfConfig":"43"},{"size":2131,"mtime":1711523569383,"results":"55","hashOfConfig":"43"},{"size":850,"mtime":1711530339632,"results":"56","hashOfConfig":"43"},{"size":4206,"mtime":1711432654067,"results":"57","hashOfConfig":"43"},{"size":3734,"mtime":1711530154100,"results":"58","hashOfConfig":"43"},{"size":3593,"mtime":1711528501622,"results":"59","hashOfConfig":"43"},{"size":7030,"mtime":1711528705501,"results":"60","hashOfConfig":"43"},{"size":659,"mtime":1711526659988,"results":"61","hashOfConfig":"43"},{"size":7058,"mtime":1711534950105,"results":"62","hashOfConfig":"43"},{"size":639,"mtime":1711436688294,"results":"63","hashOfConfig":"64"},{"size":2131,"mtime":1711523569383,"results":"65","hashOfConfig":"64"},{"size":362,"mtime":1706865684000,"results":"66","hashOfConfig":"64"},{"size":2324,"mtime":1711436699086,"results":"67","hashOfConfig":"64"},{"size":665,"mtime":1706865684000,"results":"68","hashOfConfig":"64"},{"size":278,"mtime":1711433313692,"results":"69","hashOfConfig":"64"},{"size":549,"mtime":1706865684000,"results":"70","hashOfConfig":"64"},{"size":3359,"mtime":1711550306702,"results":"71","hashOfConfig":"64"},{"size":3386,"mtime":1706865684000,"results":"72","hashOfConfig":"64"},{"size":5028,"mtime":1711434833461,"results":"73","hashOfConfig":"64"},{"size":1989,"mtime":1711415172130,"results":"74","hashOfConfig":"64"},{"size":847,"mtime":1706865684000,"results":"75","hashOfConfig":"64"},{"size":3550,"mtime":1711553313076,"results":"76","hashOfConfig":"64"},{"size":3786,"mtime":1711528489490,"results":"77","hashOfConfig":"64"},{"size":850,"mtime":1711530339632,"results":"78","hashOfConfig":"64"},{"size":3911,"mtime":1711556678786,"results":"79","hashOfConfig":"64"},{"size":4206,"mtime":1711432654067,"results":"80","hashOfConfig":"64"},{"size":7030,"mtime":1711528705501,"results":"81","hashOfConfig":"64"},{"size":659,"mtime":1711526659988,"results":"82","hashOfConfig":"64"},{"size":1085,"mtime":1711552790201,"results":"83","hashOfConfig":"64"},{"size":3580,"mtime":1711556815699,"results":"84","hashOfConfig":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1blxrev",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yepyx7",{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/victoralvin/Pictures/Educonnect/Client/src/index.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/App.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/reportWebVitals.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/Components/Layout/Layout.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/AppLayout.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/ChatWithLecturers.js",["178"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { ref, push, set } from 'firebase/database';\nimport { database } from '../../firebase';\nimport { format } from 'date-fns';\nimport './ChatWithLecturers.css'; // Import CSS file for styling\n\nconst ChatWithLecturers = ({ userData }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  const { studentId, fullname, lecturerId, groupName, lecturerName } = userData;\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const url = \"http://localhost:5001\"; // Update the URL to match your server endpoint\n        const response = await axios.get(`${url}/api/messages/retrievemessage/${studentId}/${lecturerId}`);\n        console.log(response.data);\n        const { messages } = response.data; // Access the messages object\n        if (messages) {\n          const messageList = Object.values(messages); // Convert messages object to array\n          messageList.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          setMessages(messageList);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    fetchMessages();\n  }, [studentId, lecturerId]);\n\n  const formatTimestamp = (timestamp) => {\n    return format(new Date(timestamp), \"yyyy-MM-dd HH:mm:ss\");\n  };\n\n  const sendMessage = async () => {\n    try {\n      // Check if the newMessage is not empty\n      if (!newMessage.trim()) {\n        toast.error('Cannot send empty message', {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n        return; // Exit the function if the message is empty\n      }\n\n      const newMsgRef = push(ref(database, `messages/${lecturerId}/${studentId}/messages`));\n      const newMsgData = {\n        senderId: studentId,\n        message: newMessage,\n        fullname: fullname,\n        timestamp: new Date().toISOString()\n      };\n      await set(newMsgRef, newMsgData);\n\n      const newMsg = {\n        senderId: studentId,\n        message: newMessage,\n        fullname: fullname,\n        timestamp: new Date().toISOString()\n      };\n      setMessages([...messages, newMsg]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div className=\"Chatbot\">\n      <div className=\"group-name-container\">\n        <p>Chat with {lecturerName}</p>\n      </div>\n      <div className=\"messages-wrapper\">\n        {messages.length === 0 ? (\n          <div className=\"no-messages-card\">\n            <p>You haven't contacted {lecturerName} yet.</p>\n          </div>\n        ) : (\n          messages.map((message, index) => (\n            <div\n              className={`chat-bubble ${message.senderId === studentId ? \"right\" : \"\"}`}\n              key={index}\n            >\n              <div className=\"chat-bubble__right\">\n                <p className=\"user-name\">{message.fullname}</p>\n                <p className=\"user-message\">{message.message}</p>\n                <span className=\"message-time\">\n                  {formatTimestamp(message.timestamp)}\n                </span>\n              </div>\n              {message.senderId === studentId && <div className=\"message-divider\"></div>}\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"send-message\">\n        <input\n          id=\"messageInput\"\n          type=\"text\"\n          className=\"form-input__input\"\n          placeholder=\"type message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n        />\n        <button onClick={sendMessage} type=\"button\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWithLecturers;","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Register/RegisterPage.js",["179","180"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate instead of useHistory\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport \"../Register/RegisterPage.css\";\nimport Logo from './kcalogo.jpeg';\nimport {registerUser} from '../../apis/auth';\nimport { useUserContext } from '../../UserContext'; \n\nconst RegisterPage = () => {\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n  const [username, setUsername] = useState('');\n  const [firstname,setFirstname]= useState('');\n  const [lastname,setLastname]=useState('');\n  const [loading, setLoading] = useState(false);\n  const { setUserDetails } = useUserContext();\n  // console.log('Username : ', username);\n  const [email, setEmail] = useState('');\n  // console.log('Email : ', email);\n  const [password, setPassword] = useState('');\n  // console.log('Password : ', password);\n  const [regno, setRegno] = useState('');\n  // console.log('RegNo : ', regno);\n\n  const [confirmpassword,setConfirmPassword] = useState('');\n\n \n  const handleRegistration = async (e) => {\n    e.preventDefault();\n    if (password !== confirmpassword) {\n      toast.error('Password and Confirm Password do not match', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n    if (!email.endsWith('@students.kcau.ac.ke')) {\n      toast.error('Please use a valid email address ending with @students.kcau.ac.ke', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    return;\n    }\n    try {\n      // Call the API to log in the student\n      const data = {\n        username,\n        firstname,\n        lastname,\n        regno,\n        email,\n        password\n      };\n      const response = await registerUser(data);\n      console.log(\"User Context Set: \", response.data);\n      setUserDetails(response.data.user);\n      console.log(\"User Context Set: \", response.data.user);\n      // You can also perform other actions after successful registration\n      navigate('/dashboard', { replace: true });\n\n      toast.success('User registered successfully ✅', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } catch (error) {\n      // Handle login error\n      // console.error('Login failed', error);\n      toast.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <div className=\"logo-container\">\n          <img src={Logo} alt=\"Logo\" className=\"logo-image\" />\n        </div>\n        <h3>Register for proper </h3>\n\n        <form onSubmit={handleRegistration}>\n\n        {/* <label htmlFor=\"regno\">Regno:</label> */}\n        <input \n          type=\"text\"\n          id=\"regno\" \n          name=\"regno\" \n          placeholder='Registration Number eg 19xxxxx'\n          value={regno} \n          maxLength={7} // Limit to 7 characters\n          pattern=\"\\d*\" // Only allow digits\n          onChange={(e) => {\n            // Limit input to 7 digits\n            const input = e.target.value.slice(0, 7);\n            // Update state with only digits\n            setRegno(input.replace(/\\D/g, '')); \n          }} \n          required \n        />\n\n          {/* <label htmlFor=\"username\">Username:</label> */}\n          <input type=\"text\" id=\"username\" \n          name=\"username\"\n          placeholder='Username'\n          value={username} onChange={(e) => setUsername(e.target.value)} required />\n\n          <input type=\"text\" id=\"firstname\" \n          name=\"firstname\"\n          placeholder='Firstname'\n          value={firstname} onChange={(e) => setFirstname(e.target.value)} required />\n\n          <input type=\"text\" id=\"lastname\" \n          name=\"lastname\"\n          placeholder='Lastname'\n          value={lastname} onChange={(e) => setLastname(e.target.value)} required />\n\n          {/* <label htmlFor=\"email\">Email:</label> */}\n          <input type=\"email\"\n          id=\"email\" \n          name=\"email\" \n          placeholder='Email Address'\n          value={email} \n          onChange={(e) => setEmail(e.target.value)} required />\n\n          {/* <label htmlFor=\"password\">Password:</label> */}\n          <input type=\"password\" \n          id=\"password\" \n          name=\"password\" \n          placeholder='Password'\n          value={password} \n          onChange={(e) => setPassword(e.target.value)}\n          required />\n\n          {/* <label htmlFor=\"confirmpassword\">Confirm Password:</label> */}\n          <input type=\"password\" \n          id=\"confirmpassword\" \n          name=\"confirmpassword\" \n          placeholder='Confirm Password'\n          value={confirmpassword} \n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required />\n\n          <button type=\"submit\">Register</button>\n        </form>\n\n        <p>\n           <Link to=\"/login\">Login</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","/home/victoralvin/Pictures/Educonnect/Client/src/Components/ForgotPassword/ForgotPasswordPage.js",["181","182","183","184","185"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';  // Import Link from react-router-dom\nimport { useLocation } from 'react-router-dom';\nimport \"../ForgotPassword/ForgotPasswordPage.css\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { auth } from '../../firebase';\nimport { sendPasswordResetEmail } from 'firebase/auth';\n//import Logo from './kcalogo.jpeg';\nimport {resetPassword} from '../../apis/auth';\n\nconst ForgotPasswordPage = () => {\n  const [email, setEmail] = useState('');\n  const [setIsEmailSent] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n    try {\n      // Call the API to log in the user\n      const data = {\n        email\n      };\n      const response = await resetPassword(data);\n      setIsEmailSent(true);\n      toast.success('Email reset password-link sent successfully', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } catch (error) {\n      toast.error(`Error sending password reset email.`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } finally {\n      setLoading(false);\n    } \n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        {/* <div className=\"logo-container\">\n          <img src={Logo} alt=\"Logo\" className=\"logo-image\" />\n        </div> */}\n        <h4>Reset your Password</h4>\n        <form onSubmit={handlePasswordReset}>\n\n          <label htmlFor=\"email\">Email:</label>\n          <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n\n          <button type=\"submit\">Send me Instructions</button>\n        </form>\n        <p>\n           <Link to=\"/login\">Login</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordPage;\n","/home/victoralvin/Pictures/Educonnect/Client/src/Components/NotFound/NotFound.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/Components/Login/Login.js",["186","187","188","189","190","191","192","193"],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {  signInWithEmailAndPassword   } from 'firebase/auth';\nimport { getDatabase, get } from 'firebase/database';\nimport {ref,set} from 'firebase/database';\nimport { auth,database } from '../../firebase.js';\nimport { Link } from 'react-router-dom';\nimport '../Login/Login.css';\nimport Logo from './kcalogo.jpeg';\nimport {loginUser} from '../../apis/auth';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const setUserDetails = (userData) => {\n    // Destructure the properties you want to keep\n    // eslint-disable-next-line camelcase\n    const { studentId,username,firstname,lastname,regno,fullname,groupName,email,lecturerId,lecturerName } = userData;\n    // Create a new object with only the properties you want to keep\n    const updatedUserData = {\n      studentId,\n      username,\n      firstname,\n      lastname,\n      regno,\n      groupName,\n      fullname,\n      groupName,\n      email,\n      lecturerId,\n      lecturerName\n    }; \n    // Save the trimmed student details to localStorage\n    localStorage.setItem('student', JSON.stringify(updatedUserData));\n  };  \n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      let userId;\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      userId = user.uid;\n      console.log(userId);\n    \n      toast.success('Welcome Back Student', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n  \n      // Redirect to the dashboard after successful login\n      navigate('/dashboard', { replace: true });\n    } catch (error) {\n      console.error('Error signing in:', error);\n      toast.error('Invalid username or password', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } finally {\n      setLoading(false);\n    } \n  };\n  \n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <div className=\"logo-container\">\n          <img src={Logo} alt=\"Logo\" className=\"logo-image\" />\n        </div>\n        <form onSubmit={handleLogin}>\n          <label htmlFor=\"email\">Username:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n\n          <button type=\"submit\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}</button>\n        </form>\n        <p>\n          Don't have an account? \n           <Link to=\"/register\">Register</Link>\n        </p>\n        <p>\n           <Link to=\"/forgot-password\">Forgot Password?</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;","/home/victoralvin/Pictures/Educonnect/Client/src/Components/SuccessPage/SuccessPage.js",["194"],"import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport NotFoundImage from '../SuccessPage/successPage.jpg';\nimport '../SuccessPage/SuccessPage.css';\n\nconst SuccessPage = () => {\n  const location = useLocation();\n  const extractedDetails = location.state?.extractedDetails;\n\n  const { unitCode, venue, formattedDate, formattedTime, lecturersUserId } = extractedDetails || {};\n\n  return (\n    <div className=\"not-found-container\">\n      <img src={NotFoundImage} alt=\"404 Not Found\" className=\"not-found-image\" />\n      <div className=\"not-found-text\">\n        <h2>Successfully Marked Attendance for {unitCode}</h2>\n        <p>\n          on {formattedDate} at {formattedTime}, held in the venue {venue}. Thank you for using Tranquil QRCode Scanner.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SuccessPage;\n","/home/victoralvin/Pictures/Educonnect/Client/src/Components/OTP/OTPVerification.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/UserContext.js",["195"],"// UserContext.js\nimport { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport const useUserContext = () => {\n  return useContext(UserContext);\n};\n\nexport const UserProvider = ({ children }) => {\n  const [storedData, setStoredData] = useState({});\n  const [student, setUser] = useState(() => {\n    // Initialize state from localStorage if available\n    const storedUser = localStorage.getItem('student');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('student');\n    console.log('Stored user:', storedUser); // Check if the stored user data is retrieved\n    const initialUser = storedUser ? JSON.parse(storedUser) : null;\n    setUser(initialUser);\n  }, []);\n\n  useEffect(() => {\n    const localStorageData = {};\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const value = localStorage.getItem(key);\n      localStorageData[key] = value;\n    }\n    console.log('localStorageData:', localStorageData); // Log the collected data\n    setStoredData(localStorageData);\n  }, []);\n\n  const setUserDetails = (userData) => {\n    // Destructure the properties you want to keep\n    // eslint-disable-next-line camelcase\n    const { studentId,username,firstname,lastname,regno,fullname,email,lecturerId,groupName,lecturerName } = userData;\n    // Create a new object with only the properties you want to keep\n    const updatedUserData = {\n      studentId,\n      username,\n      firstname,\n      lastname,\n      regno,\n      groupName,\n      fullname,\n      email,\n      lecturerId,\n      lecturerName\n    };\n        \n    setUser(updatedUserData);\n  \n    // Save the trimmed student details to localStorage\n    localStorage.setItem('student', JSON.stringify(updatedUserData));\n  };\n  \n  useEffect(() => {\n    // Cleanup localStorage on component unmount\n    return () => {\n      localStorage.removeItem('student');\n    };\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ student, setUserDetails }}>\n      {children}\n    </UserContext.Provider>\n  );\n};","/home/victoralvin/Pictures/Educonnect/Client/src/firebase.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/apis/auth.js",["196","197"],"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// const url = \"process.env.REACT_APP_SERVER_URL\";\nconst url = \"http://localhost:5001\";\n// console.log(\"Url :\",url);\n\nexport const loginUser = async (body) => {\n  try {\n    const { userId } = body;\n    const response = await axios.post(`${url}/auth/login`, body);\n    toast.success('Login successful');\n    return response;\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.error) {\n      toast.error(error.response.data.error); // Display error message from server\n    } else {\n      toast.error('Login failed. Please try again later.'); // Generic error message\n    }\n    throw error;\n  }\n};\n\nexport const registerUser = async (body) => {\n    try {\n      const response = await axios.post(`${url}/auth/register`, body);\n      toast.success('Registration success. Welcome to KCAU!');\n      return response;\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error) {\n        toast.error(error.response.data.error); // Display error message from server\n      } else {\n        toast.error('Registration failed. Please try again later.'); // Generic error message\n      }\n      throw error;\n    }\n};\n  \nexport const resetPassword = async (body) => {\n  try {\n    const { email } = body \n       \n    const response = await axios.post(`${url}/auth/resetpassword`, body);\n    // Assuming the API returns an error message in the response if there's an error\n    if (response.data.error) {\n      toast.error(response.data.error); // Toast the error message\n      return; // Return early as there's an error\n    }\n    toast.success('Password reset successful. Please log in with your new password.');\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.error) {\n      toast.error(error.response.data.error); // Toast the error message from the server\n    } else {\n      toast.error('Failed to reset password. Please try again later.'); // Generic error message\n    }\n    throw error;\n  }\n};\nexport const forgotPassword = async (body) => {\n  try {\n    const response = await axios.post(`${url}/auth/forgotpassword`, body);\n    // Assuming the API returns an error message in the response if there's an error\n    if (response.data.error) {\n      toast.error(response.data.error); // Toast the error message\n      return; // Return early as there's an error\n    }\n    toast.success('Email sent successfully');\n    return response.data; // Return response data if needed\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.error) {\n      toast.error(error.response.data.error); // Toast the error message from server\n    } else {\n      toast.error('Password Change Failed. Please try again later.'); // Generic error message\n    }\n    throw error;\n  }\n};\n\nconst EmailMeAPI = (secretKey) =>\n  axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: secretKey,\n    }\n});\n\nexport const contactemail = async (user, body) => {\n  try {\n    const { secretKey, username } = user;\n\n    const emailMeApiInstance = EmailMeAPI(secretKey);\n    // console.log('Body:', body);\n    const { data } = await emailMeApiInstance.post(`${url}/auth/emailme`, { username, body });\n    // const { data } = await EmailMeAPI(secretKey).post(`${url}/auth/emailme`, { username, body });\n    return data;\n  } catch (error) {\n    // console.error('Error in Email:', error);\n    toast.error('Please Try Again later,.', error);\n    throw error;\n  }\n};\n\nexport const profileupdate = async (user,body) => {\n  try {\n    const { secretKey, username } = user;\n\n    const withdrawalDetailsApiInstance = EmailMeAPI(secretKey);\n    // console.log('Body:', body);\n    const data  = await withdrawalDetailsApiInstance.post(`${url}/auth/profileupdate`, { username, body });\n    toast.success('Profile update successful');\n    return data;\n  } catch (error) {\n    console.log('Error in Profile update API:', error);\n    toast.error('Please Try Again later.');\n    throw error;\n  }\n};","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/dashboard.js",["198","199","200","201"],"import React, { useState, useEffect } from 'react';\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport { auth } from '../../firebase'; // Adjust the path accordingly\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { useUserContext } from '../../UserContext';\nimport ChatWithLecturers from './ChatWithLecturers'; // Import the ChatWithLecturers component here\nimport GroupChats from './groupChats';\nimport Chatbot from './ChatBot';\nimport UploadDocument from './UploadDocument'\nimport './Sidebar.css';\n\nconst Sidebar = () => {\n  const [activeTab, setActiveTab] = useState('upload_document'); // Default active tab\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const { setUser } = useUserContext(); // Assuming setUser is provided by UserContext\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // const user = auth.currentUser;\n        const student = JSON.parse(localStorage.getItem('student'));\n        if (student) {\n          // User is signed in\n          // const student = JSON.parse(localStorage.getItem('student'));\n          setUserData(student);\n        } else {\n          // No user signed in, navigate to login page\n          console.error('No user signed in');\n          navigate('/login', { replace: true });\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    fetchUserData();\n\n    // Clean up function\n    return () => {\n      // Cleanup code if needed\n    };\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  const handleTabClick = (tabName) => {\n    setActiveTab(tabName);\n  };\n\n  const handleLogout = () => {\n    // Implement logout functionality here\n  };\n\n  if (!userData) {\n    return null; // Or loading indicator\n  }\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'upload_document':\n        return <UploadDocument userData={userData} />;\n      case 'chat_with_lecturer':\n        return <ChatWithLecturers userData={userData} />;\n      case 'group_chats':\n        return <GroupChats userData={userData} />;\n      case 'ai_chats':\n        return <Chatbot userData={userData} />;  \n      default:\n        return null;\n    }\n  };\n\n  const { username, regno } = userData;\n\n  return (\n    <div className=\"sidebar-layout\">\n      <ProSidebar className=\"pro-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>{username}</h3>\n          <h4>{regno}</h4>\n        </div>\n        <Menu iconShape=\"square\">\n          <MenuItem\n            active={activeTab === 'upload_document'}\n            onClick={() => handleTabClick('upload_document')}\n          >\n            Upload Document\n          </MenuItem>\n          <MenuItem\n            active={activeTab === 'chat_with_lecturer'}\n            onClick={() => handleTabClick('chat_with_lecturer')}\n          >\n            Chat with Lecturer\n          </MenuItem>\n          <MenuItem\n            active={activeTab === 'ai_chats'}\n            onClick={() => handleTabClick('ai_chats')}\n          >\n            EduConnectBot\n          </MenuItem>\n          <MenuItem\n            active={activeTab === 'group_chats'}\n            onClick={() => handleTabClick('group_chats')}\n          >\n            Group Chats\n          </MenuItem>\n        </Menu>\n        <div className=\"sidebar-footer\">\n          <MenuItem icon={<FaSignOutAlt />} onClick={handleLogout}>\n            Logout\n          </MenuItem>\n        </div>\n      </ProSidebar>\n      <div className=\"main-content\">\n        {renderTabContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/groupChats.js",[],"/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/ChatBot.js",["202"],"import { useState, useEffect } from 'react';\nimport './ChatApp.css';\nimport React, { useRef } from \"react\";\nimport EduConnectBotIcon from '../img/bot.jpeg';\nimport { triggerAnswers } from '../apis/triggeranswers.js';\n\nconst Chatbot = ({ userData }) => {\n  const scroll = useRef(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([\n    {\n      message: \"Hello, I'm the Educonnect Bot! Ask me anything related!\",\n      sentTime: \"just now\",\n      sender: \"EduconnectBot\",\n    },\n  ]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [isBadQuestion, setisBadQuestion] = useState(false); // New state variable\n  const [userMessages, setUserMessages] = useState([]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (message.trim() === \"\") {\n      alert(\"Enter a valid message\");\n      return;\n    }\n  \n    const userMessage = {\n      message,\n      direction: 'outgoing',\n      sender: 'user',\n    };\n  \n\n    setMessages((prevMessages) => [...prevMessages, userMessage]);    \n    console.log(userMessages);\n    setUserMessages((prevUserMessages) => [...prevUserMessages, message]);\n    setMessage('');\n    scroll.current.scrollIntoView({ behavior: \"smooth\" });\n  \n    const isBadQuestion = checkIfBadQuestion(message);\n    setisBadQuestion(isBadQuestion);\n  \n    if (!isBadQuestion) {\n      setIsTyping(true);\n  \n      try {\n        const TrainingData = userMessages.map(message => `User: ${message}.`).join(' ');\n        const trainmessage = `\n        Welcome! your name EduConnect Bot. You assist university students with their academic projects and inquiries.\n        Whether they need help with research, writing, formatting, or any other aspect of their project, You are there to lend a hand.\n        ${TrainingData ? `To better understand your needs, here's a summary of your recent messages: ${TrainingData}` : \"You haven't communicated with me yet. Feel free to start the conversation!\"}\n        `;\n\n\n          triggerAnswers(trainmessage).then((response) => {\n          setIsTyping(false);\n          if (response && response !== \"Text not available\") {\n            const chatGPTResponse = {\n              message: response,\n              sender: 'EduConnectBot',\n            };\n            setMessages((prevMessages) => [...prevMessages, chatGPTResponse]);\n          } else {\n            const errorMessage = {\n              message: \"Sorry, I cannot process your message due to safety concerns. Please try again with a different query.\",\n              direction: 'incoming',\n              sender: 'EduConnectBot',\n            };\n            setMessages((prevMessages) => [...prevMessages, errorMessage]);\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n        setIsTyping(false);\n      }\n    } else {\n      const denialMessage = {\n        message: \"I'm sorry, but I'm programmed to answer only questions with no bad words in it.\",\n        direction: 'incoming',\n        sender: 'EduConnectBot',\n      };\n  \n      setMessages((prevMessages) => [...prevMessages, denialMessage]);\n      setIsTyping(false);\n    }\n  };\n    \n  const checkIfBadQuestion = (message) => {\n    const badKeywords = [\n      'damn', 'fuck', 'stupid', 'bastard', 'fool', 'idiot', 'asshole', 'shit',\n      'bullshit', 'dick', 'cock', 'pussy', 'cunt', 'ass', 'bitch', 'motherfucker',\n      'whore', 'slut', 'prick', 'wanker', 'arsehole', 'jackass', 'douchebag',\n      'twat', 'douche', 'son of a bitch', 'bloody hell', 'crap', 'arse', 'fanny',\n      'screw you', 'screw off', 'go to hell', 'bugger off', 'sod off', 'wank', \n      'piss off', 'fuck off', 'fudge', 'eff off', 'eff you', 'effing', 'freaking', \n      'frigging', 'frick', 'frack', 'dagnabbit', 'goddamn', 'daggonit'\n    ];\n    return badKeywords.some((keyword) => message.toLowerCase().includes(keyword));\n  }; \n\n  return (\n  <div className=\"Chatbot\">\n    {isMobile ? (\n      <div className=\"mobile-chat-container\">\n        <div className=\"messages-wrapper\">\n          {messages?.map((message, index) => (\n            <div className={`chat-bubble ${message.sender === 'user' ? \"right\" : \"\"}`} key={index}>\n              {message.sender !== 'user' && (\n                <img\n                  className=\"chat-bubble__left\"\n                  src={EduConnectBotIcon}\n                  alt=\"EduConnectBot avatar\"\n                />\n              )}\n              <div className=\"chat-bubble__right\">\n                {message.sender !== 'user' && (\n                  <p className=\"user-name\">{message.sender}</p>\n                )}\n                <p className=\"user-message\">{message.message}</p>\n              </div>\n              {message.sender === 'user' && <div className=\"message-divider\"></div>}\n            </div>\n          ))}\n        </div>\n        <span ref={scroll}></span>\n        <div className=\"send-message\">\n          <input\n            id=\"messageInput\"\n            type=\"text\"\n            className=\"form-input__input\"\n            placeholder=\"type message...\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSendMessage} type=\"button\">Send</button>\n        </div>\n      </div>\n    ) : (\n      <div className=\"desktop-chat-container\">\n        <div className=\"messages-wrapper\">\n          {messages?.map((message, index) => (\n            <div className={`chat-bubble ${message.sender === 'user' ? \"right\" : \"\"}`} key={index}>\n              {message.sender !== 'user' && (\n                <img\n                  className=\"chat-bubble__left\"\n                  src={EduConnectBotIcon}\n                  alt=\"EduConnectBot avatar\"\n                />\n              )}\n              <div className=\"chat-bubble__right\">\n                {message.sender !== 'user' && (\n                  <p className=\"user-name\">{message.sender}</p>\n                )}\n                <p className=\"user-message\">{message.message}</p>\n              </div>\n              {message.sender === 'user' && <div className=\"message-divider\"></div>}\n            </div>\n          ))}\n        </div>\n        <span ref={scroll}></span>\n        <div className=\"send-message\">\n          <input\n            id=\"messageInput\"\n            type=\"text\"\n            className=\"form-input__input\"\n            placeholder=\"type message...\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSendMessage} type=\"button\">Send</button>\n        </div>\n      </div>\n    )}\n\n    {isTyping && messages.length > 0 && messages[messages.length - 1].sender === 'EduConnectBot' && (\n      <p>Loading...</p>\n    )}\n  </div>\n);\n}\n\nexport default Chatbot;","/home/victoralvin/Pictures/Educonnect/Client/src/Components/apis/triggeranswers.js",["203"],"import React from \"react\";\nimport {GoogleGenerativeAI} from '@google/generative-ai';\nconst genAI = new GoogleGenerativeAI('AIzaSyBgWiIo1jG67broYNEw7Umi5H4XYiYJpx8');\n\nexport async function triggerAnswers(message){\n    const generationConfig = {\n        stopSequences: [\"red\"],\n        maxOutputTokens:300,\n        temperature:0.9,\n        topP:0.1,\n        topK:16,\n    }\n    const model = genAI.getGenerativeModel({ model: 'gemini-pro' },generationConfig);\n\n    const result = await model.generateContent(message);\n    const response = await result.response;\n    console.log(\"Response :\",response);\n    const text = await response.text();\n    return text;\n\n}","/home/victoralvin/Pictures/Educonnect/Client/src/Components/Dashboard/UploadDocument.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/index.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/UserContext.js",["204"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/reportWebVitals.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/App.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Layout/Layout.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/AppLayout.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/NotFound/NotFound.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Login/Login.js",["205","206","207","208","209"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/OTP/OTPVerification.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Register/RegisterPage.js",["210","211"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/ForgotPassword/ForgotPasswordPage.js",["212","213","214","215","216"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/SuccessPage/SuccessPage.js",["217"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/groupChats.js",["218","219","220","221"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/ChatWithLecturers.js",["222"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/firebase.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/dashboard.js",["223","224","225","226","227","228","229","230"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/apis/auth.js",["231","232"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/ChatBot.js",["233"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/apis/triggeranswers.js",["234"],["235","236"],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/StudentList.js",[],"/home/victoralvin/Pictures/Educonnect/Lecturer/src/Components/Dashboard/DocumentViewer.js",[],{"ruleId":"237","severity":1,"message":"238","line":13,"column":44,"nodeType":"239","messageId":"240","endLine":13,"endColumn":53},{"ruleId":"237","severity":1,"message":"241","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"242","line":17,"column":10,"nodeType":"239","messageId":"240","endLine":17,"endColumn":17},{"ruleId":"237","severity":1,"message":"241","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"243","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":14},{"ruleId":"237","severity":1,"message":"244","line":8,"column":10,"nodeType":"239","messageId":"240","endLine":8,"endColumn":32},{"ruleId":"237","severity":1,"message":"242","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":17},{"ruleId":"237","severity":1,"message":"245","line":24,"column":13,"nodeType":"239","messageId":"240","endLine":24,"endColumn":21},{"ruleId":"237","severity":1,"message":"246","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":21},{"ruleId":"237","severity":1,"message":"247","line":6,"column":23,"nodeType":"239","messageId":"240","endLine":6,"endColumn":26},{"ruleId":"237","severity":1,"message":"248","line":7,"column":9,"nodeType":"239","messageId":"240","endLine":7,"endColumn":12},{"ruleId":"237","severity":1,"message":"249","line":7,"column":13,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"250","line":8,"column":15,"nodeType":"239","messageId":"240","endLine":8,"endColumn":23},{"ruleId":"237","severity":1,"message":"251","line":12,"column":9,"nodeType":"239","messageId":"240","endLine":12,"endColumn":18},{"ruleId":"237","severity":1,"message":"252","line":20,"column":9,"nodeType":"239","messageId":"240","endLine":20,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":33,"column":7,"nodeType":"255","messageId":"256","endLine":33,"endColumn":16},{"ruleId":"237","severity":1,"message":"257","line":10,"column":58,"nodeType":"239","messageId":"240","endLine":10,"endColumn":73},{"ruleId":"237","severity":1,"message":"258","line":11,"column":10,"nodeType":"239","messageId":"240","endLine":11,"endColumn":20},{"ruleId":"237","severity":1,"message":"259","line":11,"column":13,"nodeType":"239","messageId":"240","endLine":11,"endColumn":19},{"ruleId":"237","severity":1,"message":"260","line":42,"column":13,"nodeType":"239","messageId":"240","endLine":42,"endColumn":18},{"ruleId":"237","severity":1,"message":"261","line":2,"column":38,"nodeType":"239","messageId":"240","endLine":2,"endColumn":45},{"ruleId":"237","severity":1,"message":"243","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"237","severity":1,"message":"262","line":18,"column":11,"nodeType":"239","messageId":"240","endLine":18,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":45,"column":6,"nodeType":"265","endLine":45,"endColumn":8,"suggestions":"266"},{"ruleId":"237","severity":1,"message":"267","line":19,"column":10,"nodeType":"239","messageId":"240","endLine":19,"endColumn":23},{"ruleId":"237","severity":1,"message":"268","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"258","line":11,"column":10,"nodeType":"239","messageId":"240","endLine":11,"endColumn":20},{"ruleId":"237","severity":1,"message":"246","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":21},{"ruleId":"237","severity":1,"message":"247","line":6,"column":23,"nodeType":"239","messageId":"240","endLine":6,"endColumn":26},{"ruleId":"237","severity":1,"message":"248","line":7,"column":9,"nodeType":"239","messageId":"240","endLine":7,"endColumn":12},{"ruleId":"237","severity":1,"message":"249","line":7,"column":13,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"250","line":8,"column":15,"nodeType":"239","messageId":"240","endLine":8,"endColumn":23},{"ruleId":"237","severity":1,"message":"241","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"242","line":17,"column":10,"nodeType":"239","messageId":"240","endLine":17,"endColumn":17},{"ruleId":"237","severity":1,"message":"241","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"243","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":14},{"ruleId":"237","severity":1,"message":"244","line":8,"column":10,"nodeType":"239","messageId":"240","endLine":8,"endColumn":32},{"ruleId":"237","severity":1,"message":"242","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":17},{"ruleId":"237","severity":1,"message":"245","line":24,"column":13,"nodeType":"239","messageId":"240","endLine":24,"endColumn":21},{"ruleId":"237","severity":1,"message":"257","line":10,"column":58,"nodeType":"239","messageId":"240","endLine":10,"endColumn":73},{"ruleId":"237","severity":1,"message":"269","line":13,"column":11,"nodeType":"239","messageId":"240","endLine":13,"endColumn":20},{"ruleId":"237","severity":1,"message":"270","line":14,"column":7,"nodeType":"239","messageId":"240","endLine":14,"endColumn":15},{"ruleId":"237","severity":1,"message":"260","line":16,"column":7,"nodeType":"239","messageId":"240","endLine":16,"endColumn":12},{"ruleId":"237","severity":1,"message":"271","line":18,"column":7,"nodeType":"239","messageId":"240","endLine":18,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":13,"column":44,"nodeType":"239","messageId":"240","endLine":13,"endColumn":53},{"ruleId":"237","severity":1,"message":"261","line":2,"column":38,"nodeType":"239","messageId":"240","endLine":2,"endColumn":45},{"ruleId":"237","severity":1,"message":"243","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"237","severity":1,"message":"262","line":19,"column":11,"nodeType":"239","messageId":"240","endLine":19,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":45,"column":6,"nodeType":"265","endLine":45,"endColumn":8,"suggestions":"272"},{"ruleId":"237","severity":1,"message":"269","line":76,"column":11,"nodeType":"239","messageId":"240","endLine":76,"endColumn":20},{"ruleId":"237","severity":1,"message":"270","line":77,"column":5,"nodeType":"239","messageId":"240","endLine":77,"endColumn":13},{"ruleId":"237","severity":1,"message":"273","line":80,"column":5,"nodeType":"239","messageId":"240","endLine":80,"endColumn":15},{"ruleId":"237","severity":1,"message":"271","line":81,"column":5,"nodeType":"239","messageId":"240","endLine":81,"endColumn":21},{"ruleId":"237","severity":1,"message":"259","line":11,"column":13,"nodeType":"239","messageId":"240","endLine":11,"endColumn":19},{"ruleId":"237","severity":1,"message":"260","line":42,"column":13,"nodeType":"239","messageId":"240","endLine":42,"endColumn":18},{"ruleId":"237","severity":1,"message":"267","line":19,"column":10,"nodeType":"239","messageId":"240","endLine":19,"endColumn":23},{"ruleId":"237","severity":1,"message":"268","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},"no-unused-vars","'groupName' is assigned a value but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'loading' is assigned a value but never used.","'auth' is defined but never used.","'sendPasswordResetEmail' is defined but never used.","'response' is assigned a value but never used.","'getDatabase' is defined but never used.","'get' is defined but never used.","'ref' is defined but never used.","'set' is defined but never used.","'database' is defined but never used.","'loginUser' is defined but never used.","'setUserDetails' is assigned a value but never used.","no-dupe-keys","Duplicate key 'groupName'.","ObjectExpression","unexpected","'lecturersUserId' is assigned a value but never used.","'storedData' is assigned a value but never used.","'userId' is assigned a value but never used.","'email' is assigned a value but never used.","'SubMenu' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["278"],"'isBadQuestion' is assigned a value but never used.","'React' is defined but never used.","'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'levelofeducation' is assigned a value but never used.",["279"],"'lecturerId' is assigned a value but never used.","no-native-reassign",["280"],"no-negated-in-lhs",["281"],{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [navigate]",{"range":"285","text":"286"},{"range":"287","text":"286"},[1645,1647],"[navigate]",[1664,1666]]